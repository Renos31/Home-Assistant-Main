homeassistant:
  customize:
    package.node_anchors:
      customize: &customize
        package: 'Washing machine'

    sensor.washing_machine_watts:
      friendly_name: Wattage of Washing machine
      icon: mdi:power-plug
    sensor.washing_machine_power_up:
      friendly_name: Washer Running
      icon: mdi:power-plug
    sensor.washing_machine_power_down:
      friendly_name: Washer Off
      icon: mdi:power-plug
    sensor.washer_status:
      friendly_name: Washer Status
      icon: mdi:power-settings
    sensor.stopwatch:
      friendly_name: Cycle TIme
      icon: mdi:timer
    switch.wemo_washing_machine:
      friendly_name: Washing Machine switch
      haaska_hidden: true

group:

  washing_machine_card_frontend:
   name: Washing Machine
   entities:
    - sensor.washer_status
    - sensor.stopwatch
    - switch.wemo_washing_machine

input_boolean:
  washer_switch:
    initial: off
    icon: mdi:water
  stopwatch:
    name: Stopwatch
    initial: off
  dummy:
    name: Dummy
    initial: off

sensor:
  - platform: template
    sensors:
      washing_machine_watts:
        value_template: '{{ states.switch.wemo_washing_machine.attributes["current_power_w"] | replace(" W", "") | float }}'
        unit_of_measurement: 'W'
      washing_machine_power_down:
        value_template: "{{ states('sensor.washing_machine_watts') | int < 3.4 }}"
      washing_machine_power_up:
        value_template: "{{ states('sensor.washing_machine_watts') | int > 3.4 }}"
      washer_status:
        value_template: '{% if is_state("sensor.washing_machine_power_up", "True") %}Cleaning{% else %}Idle{% endif %}'
      stopwatch:
        entity_id: sun.sun
        value_template: >
                {% if is_state('input_boolean.stopwatch', 'on') %}
                {{ relative_time(states.automation.stopwatch_start.attributes.last_triggered) }}
                {# states.automation.stopwatch_update #}
                {% elif is_state('sensor.stopwatch', 'unknown') %}
                  0 seconds
                {% else %}
                {{ states('sensor.stopwatch') }}
                {% endif %}
#        entity_id:
#             - automation.stopwatch_start
#             - automation.stopwatch_update
#             - automation.stopwatch_stop

automation:
  - alias: 'Washer Start'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.washing_machine_power_down
        from: 'True'
        to: 'False'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.washer_switch
      - service: input_boolean.turn_on
        entity_id: input_boolean.stopwatch

  - alias: 'Washer Done'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.washing_machine_power_down
        from: 'False'
        to: 'True'
        for:
          minutes: 3
    condition:
      - condition: state
        entity_id: input_boolean.washer_switch
        state: 'on'
    action:
      - service: tts.google_say
        data:
          entity_id: media_player.ha_speaker, media_player.master_bedroom_cast
          message: 'Check the Clothes Washer Is Done'
      - service: notify.Pushbullet
        data:
          message: 'Check the Clothes Washer Is Done'
      - service: input_boolean.turn_off
        entity_id: input_boolean.washer_switch
      - service: input_boolean.turn_off
        entity_id: input_boolean.stopwatch

  - alias: 'Stopwatch start'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: input_boolean.stopwatch
        to: 'on'
    action:
      - service: input_boolean.toggle
        entity_id: input_boolean.dummy

  - alias: Stopwatch stop
    trigger:
      - platform: state
        entity_id: input_boolean.stopwatch
        to: 'off'
    action:
      - service: input_boolean.toggle
        entity_id: input_boolean.dummy

  - alias: Stopwatch update
    initial_state: 'on'
    trigger:
      - platform: time
        seconds: '/1'
    condition:
      - condition: state
        entity_id: input_boolean.stopwatch
        state: 'on'
    action:
      - service: input_boolean.toggle
        entity_id: input_boolean.dummy

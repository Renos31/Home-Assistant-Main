homeassistant:
  customize:

    package.node_anchors:
      customize: &customize
        package: 'mode_shower_time'

    input_boolean.boolean_shower_time:
      friendly_name: Shower Time
      hasska_hidden: true
    automation.master_bath_shower_time_off:
      haaska_hidden: true
      hidden: false
      persistence: true
    automation.master_bath_shower_time_on:
      haaska_hidden: true
      hidden: false
      persistence: true
    automation.master_bath_shower_time_warmup_on:
      haaska_hidden: true
      hidden: false
      persistence: false
    automation.master_bath_shower_time_warmup_off:
      haaska_hidden: true
      hidden: false
      persistence: false
    script.bath_time_on:
      friendly_name: Shower Time Script
      haaska_hidden: true
    script.bath_time_off:
      friendly_name: Finished Shower Script
      haaska_hidden: true
    switch.shower_time:
      friendly_name: Shower Time
      haaska_hidden: false
      haaska_name: Shower Time

input_boolean:
  boolean_shower_time:
    initial: off

automation:
  - alias: Master Bath Shower Time On
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.master_bathroom_dimmer_state_2
        to: 'click_1'
    action:
      - service: script.turn_on
        entity_id: script.bath_time_on

  - alias: Master Bath Shower Time Off
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.master_bathroom_dimmer_state_2
        to: 'click_4'
    action:
      - service: switch.turn_on
        entity_id: switch.wemo_master_bedroom_mixer
      - delay: '00:00:15'
      - service: tts.google_say
        data:
          entity_id: media_player.master_bedroom_cast
          message: 'Renabling Master Bedroom Speakers, Hope you had a good bath'
      # - service: script.turn_on
      #   entity_id: script.bath_time_off
      - service: script.turn_on
        data_template:
          entity_id: >-
            {% if is_state("input_boolean.boolean_shower_time", "on") %}
               script.bath_time_off
            {% elif is_state("input_boolean.boolean_getting_dressed", "on") %}
               script.getting_dressed_off
            {% else %}
               script.blah
            {% endif %}

script:
  bath_time_on:
    sequence:
      - delay: '00:00:01'
      - service: input_boolean.turn_on
        entity_id: input_boolean.boolean_shower_time
      - service: automation.turn_off
        entity_id: automation.motion_bathroom_home_mode_off
      - service: automation.turn_off
        entity_id: automation.motion_bathroom_sleep_off
      - service: automation.turn_off
        entity_id: automation.motion_master_bedroom_motion_off
      - service: switch.turn_on
        entity_id: switch.master_bath_heater
      - service: light.turn_on
        data:
          entity_id: light.master_bath_vanity
      - service: light.turn_on
        data:
          entity_id: light.bathroom
          color_temp: 154
          brightness: 255
      - service: light.turn_on
        data:
          entity_id: light.master_table_lamps
          color_temp: 154
          brightness: 255
      - service: light.turn_on
        data:
          entity_id: light.light_bulb_2

  bath_time_off:
    sequence:
      - delay: '00:00:01'
      - service: input_boolean.turn_off
        entity_id: input_boolean.boolean_shower_time
      - service: automation.turn_on
        entity_id: automation.motion_bathroom_home_mode_off
      - service: automation.turn_on
        entity_id: automation.motion_bathroom_sleep_off
      - service: automation.turn_on
        entity_id: automation.motion_master_bedroom_motion_off
      - service: light.turn_off
        entity_id: light.master_bath_vanity
      - service: light.turn_off
        entity_id: light.bathroom
      - service: switch.turn_off
        entity_id: switch.master_bath_heater


######## for alexa to say turn on and turn Off

switch:
  - platform: template
    switches:
      shower_time:
        value_template: "{{ is_state('light.master_bath_vanity', 'on') }}"
        turn_on:
          - service: script.turn_on
            data:
              entity_id: script.bath_time_on
        turn_off:
          - service: script.turn_on
            data:
              entity_id: script.bath_time_off

homeassistant:
  customize:

    package.node_anchors:
      customize: &customize
        package: 'equipment_hue_dimmers'

    sensor.kitchen_led_dimmer_battery:
      icon: mdi:battery
      friendly_name: Kitchen Led Dimmer
    sensor.kitchen_undercabinet_led_dimmer_state:
      icon: mdi:clock
    sensor.kitchen_led_dimmer_state:
      icon: mdi:remote

###### Hue Dimmer for Led Controls Kitchen ################
sensor:
  - platform: rest
    resource: !secret dimmer_rest_46
    value_template: '{{ value_json.config.battery }}'
    unit_of_measurement: '%'
    scan_interval: 1800
    name: 'Kitchen Led Dimmer Battery'
  - platform: rest
    resource: !secret dimmer_rest_46
    value_template: '{{ value_json.state.buttonevent }}'
    scan_interval: 1
    name: 'Kitchen Led Dimmer State'

  - platform: rest
    name: Kitchen_dimmer_test
    resource: !secret dimmer_rest_46
    scan_interval: 2
    value_template: >-
      {% set last_updated = as_timestamp(value_json.state.lastupdated ~ '-00:00')|int %}
      {% if as_timestamp(now())|int - last_updated > 10 %}
        idle
      {% else %}
        {% set button_event = value_json.state.buttonevent|string %}
        {{ ('hold' if button_event[3]|int % 2 == 1 else 'click') ~ '_' ~ button_event[0] }}
      {% endif %}

  - platform: template
    sensors:
      kitchen_undercabinet_led_dimmer_state:
        friendly_name: 'Kitchen Dimmer Last Button Push'
        value_template: >-
                      {% if states('sensor.kitchen_led_dimmer_state_2')[0] == "1" %}
                        On
                      {% elif states('sensor.kitchen_led_dimmer_state_2')[0] == "4" %}
                        Off
                      {% else %}
                        None
                      {% endif %}
  - platform: template
    sensors:
      kitchen_pantry_dimmer_state:
        friendly_name: 'Kitchen Pantry Last Button Push'
        value_template: >-
                      {% if states('sensor.kitchen_led_dimmer_state_2')[0] == "2" %}
                        On
                      {% elif states('sensor.kitchen_led_dimmer_state_2')[0] == "3" %}
                        Off
                      {% else %}
                        None
                      {% endif %}
  - platform: rest
    resource: !secret dimmer_rest_46
    value_template: '{{ value_json.state.lastupdated }}'
    scan_interval: 10
    name: 'Kitchen Led Dimmer last update'
  - platform: template
    sensors:
      kitchen_led_dimmer_last_update:
        friendly_name: Kitchen Led Last Used'
        value_template: >-
         {{as_timestamp(strptime(states('sensor.kitchen_led_dimmer_last_update_2')[:19], "%Y-%m-%dT%X"))|timestamp_custom("%a, %B %d")}}

###### Hue Dimmer for Kitchen Table ################
  - platform: rest
    resource: !secret dimmer_rest_9
    value_template: '{{ value_json.config.battery }}'
    unit_of_measurement: '%'
    scan_interval: 1800
  - platform: rest
    resource: !secret dimmer_rest_9
    value_template: '{{ value_json.state.buttonevent }}'
    scan_interval: 1
    name: 'Kitchen Table Dimmer State'
  - platform: template
    sensors:
      kitchen_table_dimmer_state:
        friendly_name: 'Kitchen Table Dimmer Last Button Push'
        value_template: >-
                      {% if states('sensor.kitchen_table_dimmer_state_2')[0] == "1" %}
                        On
                      {% elif states('sensor.kitchen_table_dimmer_state_2')[0] == "4" %}
                        Off
                      {% else %}
                        None
                      {% endif %}
  - platform: rest
    resource: !secret dimmer_rest_9
    value_template: '{{ value_json.state.lastupdated }}'
    scan_interval: 10
    name: 'kitchen table dimmer last update'
  - platform: template
    sensors:
      kitchen_table_dimmer_last_update:
        friendly_name: 'Kitchen Table Last Used'
        value_template: >-
          {{as_timestamp(strptime(states('sensor.kitchen_table_dimmer_last_update_2')[:19], "%Y-%m-%dT%X"))|timestamp_custom("%a, %B %d")}}

###### Hue Dimmer for Master Bath ################

  - platform: rest
    resource: !secret dimmer_rest_33
    value_template: '{{ value_json.state.buttonevent }}'
    scan_interval: 1
    name: 'Master Bath Dimmer State Rest'
  - platform: rest
    resource: !secret dimmer_rest_33
    scan_interval: 1
    name: 'Master Bathroom Dimmer State'
    value_template: >-
      {% set last_updated = as_timestamp(value_json.state.lastupdated ~ '-00:00')|int %}
      {% if as_timestamp(now())|int - last_updated > 10 %}
        idle
      {% else %}
        {% set button_event = value_json.state.buttonevent|string %}
        {{ ('hold' if button_event[3]|int % 2 == 1 else 'click') ~ '_' ~ button_event[0] }}
      {% endif %}

  - platform: template
    sensors:
      master_bathroom_dimmer_last_button_push:
        friendly_name: 'Master Bath Dimmer Last Button Push'
        value_template: >-
          {% if states('sensor.master_bathroom_dimmer_state_2')[0] == "1" %}
            Shower Time
          {% elif states('sensor.master_bathroom_dimmer_state_2')[0] == "2" %}
            Getting Dressed
          {% elif states('sensor.master_bathroom_dimmer_state_2')[0] == "3" %}
            Getting Dressed Off
          {% elif states('sensor.master_bathroom_dimmer_state_2')[0] == "4" %}
            Shower Time OFf
          {% else %}
            None
          {% endif %}

  - platform: rest
    resource: !secret dimmer_rest_33
    value_template: '{{ value_json.state.lastupdated }}'
    scan_interval: 10
    name: 'Master Bathroom Dimmer Last Update'

  - platform: template
    sensors:
      master_bathroom_dimmer_last_update:
        friendly_name: 'Master Bath Last Used'
        value_template: >-
          {{ as_timestamp(strptime(states('sensor.master_bathroom_dimmer_last_update_2')[:19], "%Y-%m-%dT%X"))|timestamp_custom("%a, %B %d")}}

  - platform: rest
    resource: !secret dimmer_rest_33
    value_template: '{{ value_json.config.battery }}'
    unit_of_measurement: '%'
    scan_interval: 1800
    name: 'Master Bathroom Dimmer Battery'

  - platform: template
    sensors:
      master_bath_motion_sensor_batt:
        friendly_name: 'Master Bathroom Motion Sensor'
        value_template: "{{ state_attr('binary_sensor.motion_sensor_master_bath', 'battery_level') }}"


  - platform: template
    sensors:
      master_humidity_sensor_batt:
        friendly_name: 'Master Bathroom Humidity Sensor Battery Level'
        value_template: "{{ state_attr('sensor.humidity_master_bathroom', 'battery_level') }}"

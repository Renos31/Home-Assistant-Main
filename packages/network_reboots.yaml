homeassistant:
  customize:

    package.node_anchors:
      customize: &customize
        package: 'network reboot'
    script.driveway_cam_powercycle:
      friendly_name: Driveway Cam Reboot
      icon: mdi:access-point-network
    script.shed_cam_powercycle:
      friendly_name: Shed Cam Reboot
      icon: mdi:access-point-network
    script.swamp_cam_powercycle:
      friendly_name: Swamp Cam Reboot
      icon: mdi:access-point-network
    script.webswitch_reboot:
      friendly_name: Webswitch Reboot
      icon: mdi:power-settings
    script.network_reboot:
      friendly_name: Network Reboot
      icon: mdi:power-settings
    automation.reboot_driveway_camera:
      friendly_name: Driveway Cam Auto Reboot
    automation.reboot_shed_camera:
      friendly_name: Shed Cam Auto Reboot
    automation.reboot_swamp_camera:
      friendly_name: Swamp Cam Auto Reboot



input_boolean:
  boolean_network_reboot:
    initial: off

script:
  #### reboot websitch clients  ####################
  webswitch_reboot:
    sequence:
      - service: media_player.volume_mute
        data:
          entity_id: media_player.stereo
          is_volume_muted: "True"
      - wait_template: "{{ states.media_player.ha_speaker.state == 'idle' }}"
      - service: tts.google_say
        data:
          entity_id: media_player.ha_speaker
          message: 'WebSwitch Reboot'
      - delay: '00:00:05'
      - service: media_player.volume_mute
        data:
          entity_id: media_player.stereo
          is_volume_muted: "False"
      - delay: '00:00:05'
      - service: rest_command.webswitch_reboot
###### reboot network equipment only    ########
  network_reboot:
    sequence:
      - service: media_player.volume_mute
        data:
          entity_id: media_player.stereo
          is_volume_muted: "True"
      - wait_template: "{{ states.media_player.ha_speaker.state == 'idle' }}"
      - service: tts.google_say
        data:
          entity_id: media_player.ha_speaker
          message: 'Network is going down Gabbie and Grandma chill it will be okay'
      - delay: '00:00:05'
      - service: media_player.volume_mute
        data:
          entity_id: media_player.stereo
          is_volume_muted: "False"
      - service: input_boolean.turn_on
        entity_id: input_boolean.boolean_network_reboot
      - service: rest_command.modem_reboot
      - delay: '00:01:30'
      - service: rest_command.router_reboot
      - delay: '00:01:15'
      - service: rest_command.switch1_reboot
      - delay: '00:07:00'
      - service: switch.turn_off
        entity_id:
          - switch.wemo_unifi_shed_switch
          - switch.zha_16_port_unifi
      - delay: '00:00:01'
      - service: switch.turn_on
        entity_id:
          - switch.wemo_unifi_shed_switch
          - switch.zha_16_port_unifi
      - delay: '00:00:10'
      - service: input_boolean.turn_off
        entity_id: input_boolean.boolean_network_reboot
      - service: tts.google_say
        data:
          entity_id: media_player.ha_speaker
          message: 'Network is back up'

  driveway_cam_powercycle:
    sequence:
      - service: switch.turn_off
        entity_id: switch.wemo_driveway_camaera
      - delay: '00:00:30'
      - service: switch.turn_on
        entity_id: switch.wemo_driveway_camaera
      - service: media_player.volume_mute
        data:
          entity_id: media_player.stereo
          is_volume_muted: "True"
      - wait_template: "{{ states.media_player.ha_speaker.state == 'idle' }}"
      - wait_template: "{{ states.media_player.kids_room_cast.state == 'idle' }}"
      - service: tts.google_say
        data:
          entity_id:
            - media_player.ha_speaker
            - media_player.kids_room_cast
          message: 'Rebooting Driveway Camera'
      - delay: '00:00:05'
      - service: media_player.volume_mute
        data:
          entity_id: media_player.stereo
          is_volume_muted: "False"

  shed_cam_powercycle:
    sequence:
      - service: switch.turn_off
        entity_id: switch.shed
      - delay: '00:00:30'
      - service: switch.turn_on
        entity_id: switch.shed
      - service: media_player.volume_mute
        data:
          entity_id: media_player.stereo
          is_volume_muted: "True"
      - wait_template: "{{ states.media_player.ha_speaker.state == 'idle' }}"
      - service: tts.google_say
        data:
          entity_id: media_player.ha_speaker
          message: 'Rebooting Shed Camera'
      - delay: '00:00:05'
      - service: media_player.volume_mute
        data:
          entity_id: media_player.stereo
          is_volume_muted: "False"

  swamp_cam_powercycle:
    sequence:
      - service: switch.turn_off
        entity_id: switch.swamp_camera
      - delay: '00:00:30'
      - service: switch.turn_on
        entity_id: switch.swamp_camera
      - service: media_player.volume_mute
        data:
          entity_id: media_player.stereo
          is_volume_muted: "True"
      - wait_template: "{{ states.media_player.ha_speaker.state == 'idle' }}"
      - service: tts.google_say
        data:
          entity_id: media_player.ha_speaker
          message: 'Rebooting Swamp Camera'
      - delay: '00:00:05'
      - service: media_player.volume_mute
        data:
          entity_id: media_player.stereo
          is_volume_muted: "False"

automation:
  - alias: reboot_driveway_camera
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: binary_sensor.driveway_camera_connect
        to: 'off'
        for: '00:01:00'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.boolean_network_reboot
          state: 'off'
    action:
      - service: script.turn_on
        entity_id: script.driveway_cam_powercycle

  - alias: reboot_shed_camera
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: binary_sensor.shed_camera_connect
        to: 'off'
        for: '00:01:00'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.boolean_network_reboot
          state: 'off'
    action:
      - service: script.turn_on
        entity_id: script.shed_cam_powercycle

  - alias: reboot_swamp_camera
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: binary_sensor.swamp_camera_connect
        to: 'off'
        for: '00:01:00'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.boolean_network_reboot
          state: 'off'
    action:
      - service: script.turn_on
        entity_id: script.swamp_cam_powercycle

homeassistant:
  customize:
    package.node_anchors:
      customize: &customize
        package: 'master_bedroom_sensor_watchdog'

input_boolean:
  boolean_master_sensor_watchdog:
    initial: off

input_text:
  master_bedroom_device_battery:
    name: Master Bedroom Sensor

automation:
  - alias: 'notify_sensor_battery_low_master'
    initial_state: 'true'
    trigger:
      - platform: numeric_state
        entity_id:
          - sensor.vibration_sensor_batt
          - sensor.motion_sensor_master_battery
          - sensor.master_door_sensor_batt
          - sensor.master_closet_door_sensor_batt
          - sensor.dawns_side_window_sensor_batt
          - sensor.herbs_side_window_sensor_batt
        below: 30
      - platform: state
        entity_id:
          - sensor.master_bedroom_temperature
          - sensor.vibration_sensor_batt
          - sensor.motion_sensor_master_battery
          - sensor.master_door_sensor_batt
          - sensor.master_closet_door_sensor_batt
          - sensor.dawns_side_window_sensor_batt
          - sensor.herbs_side_window_sensor_batt
        to: 'unknown'
    action:
      - service_template: >
          {% if trigger.to_state.state | int < 30 %}
            input_boolean.turn_on
          {% elif trigger.to_state.state | lower == "unknown" %}
            input_boolean.turn_on
          {% else %}
            input_boolean.turn_off
          {% endif %}
        entity_id: input_boolean.boolean_master_sensor_watchdog
      - service: input_text.set_value
        data_template:
          entity_id: input_text.master_bedroom_device_battery
          value: "{{ trigger.to_state.attributes.friendly_name }}"
      - wait_template: "{{ states.media_player.master_bedroom_cast.state == 'idle' }}"
        timeout: '00:01:00'
        continue_on_timeout: 'true'
      - wait_template: "{{ states.media_player.ha_speaker.state == 'idle' }}"
        timeout: '00:01:00'
        continue_on_timeout: 'true'
      - service: tts.google_say
        data_template:
          entity_id:
            - media_player.master_bedroom_cast
            - media_player.ha_speaker
          message: "The {{ states('input_text.master_bedroom_device_battery') }} has a problem in your room"
      - service: shell_command.master_dash_wake_up
      - delay: '00:00:10'
      - service: shell_command.master_battery_alert_dash

  - alias: 'master_annouce_sensor_issue'
    initial_state: 'true'
    trigger:
      - platform: state
        entity_id: binary_sensor.motion_master_bedroom
        to: 'on'
      - platform: state
        entity_id: binary_sensor.master_motion
        to: 'on'
    condition:
      - condition: state
        entity_id: input_boolean.boolean_master_sensor_watchdog
        state: 'on'
      - condition: state
        entity_id: input_boolean.boolean_sleep
        state: 'off'
    action:
      - wait_template: "{{ states.media_player.master_bedroom_cast.state == 'idle' }}"
        timeout: '00:02:00'
        continue_on_timeout: 'true'
      - service: tts.google_say
        data_template:
          entity_id: media_player.master_bedroom_cast
          message: "The {{ states('input_text.master_bedroom_device_battery') }} has a problem in your room"
      - service: shell_command.master_dash_wake_up
      - delay: '00:00:10'
      - service: shell_command.master_dash

  - alias: 'master_clear_sensor_issue'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id:  input_boolean.boolean_master_sensor_watchdog
        to: 'off'
    action:
      - service: input_text.set_value
        data_template:
          entity_id: input_text.master_bedroom_device_battery
          value: "All Good"
      - service: shell_command.master_dash
      - wait_template: "{{ states.media_player.master_bedroom_cast.state == 'idle' }}"
        timeout: '00:02:00'
        continue_on_timeout: 'true'
      - service: tts.google_say
        data_template:
          entity_id: media_player.master_bedroom_cast
          message: "Thank You for Fixing Me Returning to main dash"

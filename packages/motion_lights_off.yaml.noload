################################################################
## Packages / Motion Lights Off
##
## @description Delay and transition lights off after motion is no longer detected
## @component   automation, binary_sensor, input_number, light, sensor
## @license     MIT
## @author      @Vasiley, Dale Higgs <@dale3h>
################################################################

homeassistant:
  customize:
    binary_sensor.kitchen_motion:
      # Number of seconds the motion sensor stays `on` after last motion detected
      stays_on: 1
      # Entity ID(s) of light(s) to turn off with this motion sensor
      light_entity: light.kitchen

    # binary_sensor.living_room_motion:
    #   # Number of seconds the motion sensor stays `on` after last motion detected
    #   stays_on: 10
    #   # Entity ID(s) of light(s) to turn off with this motion sensor
    #   light_entity: light.living_room

automation:
  - alias: "Motion Off"
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.kitchen_motion
#          - binary_sensor.living_room_motion
        to: 'off'
    action:
      - service: tts.google_say
        data:
          entity_id: media_player.ha_speaker
          message: 'No Motion in Kitchen starting Wait Template'
      - wait_template: >-
          {% set default_time_off_min = 0 %}

          {# Generate time off entity ID #}
          {% set time_off_entity = 'input_number.' ~ states('sensor.house_mode_state')|lower|replace(' ', '_') ~ '_off'|int * 60 %}
          {# Calculate how many seconds ago the sensor last changed #}
          {% set last_changed = as_timestamp(now()) - as_timestamp(trigger.to_state.last_changed) %}
          {# Bail out if the motion sensor is tripped during the delay #}
          {{  last_changed >= time_off_entity }}

      # Make sure the motion sensor is still off
      - delay: '00:00:10'
      - service: tts.google_say
        data:
          entity_id: media_player.ha_speaker
          message: 'Finished Wait Template waiting on condition'
      - condition: template
        value_template: "{{ is_state(trigger.entity_id, 'off') }}"
      - service: tts.google_say
        data:
          entity_id: media_player.ha_speaker
          message: 'Condition Passed'
      - delay: '00:00:10'
      - service: light.turn_off
        data_template:
          entity_id: >-
            {% if trigger.to_state.attributes.light_entity is defined %}
              {# Use `light_entity` attribute of the binary sensor #}
              {{ trigger.to_state.attributes.light_entity }}
            {% else %}
              {# Try to detect light entity ID #}
              light.{{ trigger.entity_id|regex_replace('binary_sensor\.(.+)_motion', '\\1') }}
            {% endif %}
      - service: tts.google_say
        data:
          entity_id: media_player.ha_speaker
          message: 'did light in kitchen turn off'
          # transition: >-
          #   {% set default_transition = 15 %}
          #
          #   {# Generate transition entity ID #}
          #   {% set transition_entity = 'input_number.' ~ states('sensor.house_mode_state')|lower|replace(' ', '_') ~ '_mode_transition_value' %}
          #
          #   {# Output the transition time, or the default in case of conversion failure #}
          #   {{ states(transition_entity)|int(default_transition) }}

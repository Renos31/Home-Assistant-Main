homeassistant:
#
# light:
#   - platform: group
#     name: Test Lights
#     entities:
#       - light.kitchen
#       - light.master_hallway
#       - light.kitchen_table
###### Help with info from Api
#sensor:
#  - platform: rest
#    resource: https://euw1.api.riotgames.com/lol/league/v3/positions/by-summoner/21348928?api_key=RGAPI-3bd93322-e0ed-4256-abd6-5dc984f30a02
#    value_template: "{{ value_json[0].leaguePoints }}"
#    name: League Points

############ lock with random key generator
# guest_code:
#     alias: "Generate Guest Code"
#     sequence:
#       - service: input_number.set_value
#         data_template:
#           entity_id: input_number.guest_code
#           value: "{{ (range(1, 9)|random|int) }}{{ (range(0, 9)|random|int) }}{{ (range(0, 9)|random|int) }}{{ (range(0, 9)|random|int) }}"
#       - service: lock.set_usercode
#         data_template:
#           node_id: 17
#           code_slot: 10
#           usercode: '{{ states.input_number.guest_code.state | int }}'
#
#
# input_number:
#   guest_code:
#     name: "Guest Lock Code"
#     initial: 0
#     min: 0
#     max: 9999
#     step: 1
#
# Put these in group file
#####  - script.guest_code
##### - input_number.guest_code

  # alias: "Changes made to Fan"
  # hide_entity: True
  # initial_state: 'on'
  # trigger:
  #   - platform: state
  #     entity_id: input_select.fan_mode
  # action:
  #   - service_template: >-
  #      {%- if trigger.to_state == 'Off' -%}
  #       shell_command.fanpower
  #      {%- elif trigger.to_state == 'Low' -%}
  #       shell_command.fanlow
  #      {%- elif trigger.to_state == 'Med' -%}
  #       shell_command.fanmed
  #      {%- elif trigger.to_state == 'High' -%}
  #       shell_command.fanhigh
  #      {%- endif -%}

#
# - alias: 'theme_light'
#     initial_state: 'on'
#     trigger:
#       - platform: sun
#         event: sunset
#     action:
#       - service: light.turn_on
#         data:
#           entity_id:
#             - light.hue_go
#           brightness: 250
#         data_template:
#           rgb_color: [ "{{ states.sensor.theme_color.state.split(',')[0]|int }}", "{{ states.sensor.theme_color.state.split(',')[1]|int }}", "{{ states.sensor.theme_color.state.split(',')[2]|int }}" ]
#
# sensor:
#   - platform: template
#     sensors:
#       theme_color:
#         value_template: >
#             {%- if is_state('input_select.theme', "New Year's Day") -%} 255,0,0
#             {%- elif is_state('input_select.theme', "Groundhog Day") -%} 255,0,0
#             {%- elif is_state('input_select.theme', "Valentine's Day") -%} 255,0,0
#             {%- elif is_state('input_select.theme', "St. Patrick's Day") -%} 255,0,0
#             {%- elif is_state('input_select.theme', "Good Friday") -%} 255,0,0
#             {%- elif is_state('input_select.theme', "Easter Sunday") -%} 255,0,0
#             {%- elif is_state('input_select.theme', "Earth Day") -%} 255,0,0
#             {%- elif is_state('input_select.theme', "Mother's Day") -%} 255,0,0
#             {% elif is_state('input_select.theme', "Victoria Day") -%} 255,0,0
#             {%- elif is_state('input_select.theme', "Father's Day") -%} 255,0,0
#             {%- elif is_state('input_select.theme', "Canada Day") -%}  255,0,0
#             {%- elif is_state('input_select.theme', "Labour Day") -%} 255,0,0
#             {%- elif is_state('input_select.theme', "Thanksgiving Day") -%} 255,0,0
#             {%- elif is_state('input_select.theme', "Halloween") -%} 255,168,39
#             {%- elif is_state('input_select.theme', "Remembrance Day") -%} 255,0,0
#             {%- elif is_state('input_select.theme', "Christmas Eve") -%} 255,0,0
#             {%- elif is_state('input_select.theme', "Christmas Day") -%} 255,0,0
#             {%- elif is_state('input_select.theme', "Boxing Day") -%} 255,0,0
#             {%- elif is_state('input_select.theme', "New Year's Eve") -%} 255,0,0
#             {%- else -%} 255,0,0
#             {%- endif -%}

# script:
#   house_mode_away:
#     sequence:
#       - service: light.turn_off
#         data_template:
#           entity_id: >
#             {%- for state in states.light if state.entity_id != 'light.front_door' -%}
#             {{- "," if not loop.first-}}{{ state.entity_id }}{{-endif-}}
#             {%- endfor -%}
#       - service: switch.turn_off
#         data_template:
#           entity_id: >
#             {%- for state in states.switch if
#             state.entity_id != 'switch.washing_machine' and
#             state.entity_id != 'switch.dehumidifier' and
#             state.entity_id != 'switch.pihole'-%}
#             {{- "," if not loop.first-}}{{ state.entity_id }}{{-endif-}}
#             {%- endfor -%}
#       - service: media_player.turn_off
#         data_template:
#           entity_id: >
#             {%- for state in states.media_player -%}
#             {{- "," if not loop.first-}}{{ state.entity_id }}{{-endif-}}
#             {%- endfor -%}
#       - service: climate.set_away_mode
#         data:
#           entity_id: climate.hallway
#           away_mode: 'true'
 # binary_sensor:
 #   - platform: template
 #     sensors:
 #       people_home:
 #         friendly_name: Anyone Home
 #        #device_class: occupancy
 #         value_template: "{{ is_state('device_tracker.dawn_baby', 'home') }}"
# script:
#   vacation_mode:
#     alias: 'Vacation Mode'
#     sequence:
#       - service: climate.set_operation_mode
#         data:
#           operation_mode: 'Eco'
#           entity_id: 'climate.hallway'

# automation:
#   alias: Check if phones are still online
#   trigger:
#     - platform: time
# #    hour: '/1'
#       minutes: /5
#       seconds: 0
#   condition:
#     condition: and
#     conditions:
#       - condition: state
#         entity_id: group.devices
#         state: 'home'
#       - condition: time
#         after: '15:00:00'
#         before: '02:00:00'
#   action:
#     - service: switch.turn_off
#       entity_id: switch.blue_iris
# automation:
#   - alias: Climate Control Adjustment (Sunrise)
#     initial_state: true
#     trigger:
#       platform: sun
#       event: sunrise
#       offset: '-00:15:00'
#     action:
#       - service: input_number.set_value
#         data_template:
#           entity_id: input_number.slider1
#           value: "{{ (state_attr('input_number.slider1', 'initial') | float ) - 0.0 }}"
#       - service: input_number.set_value
#         data_template:
#           entity_id: input_number.slider2
#           value: "{{ (state_attr('input_number.slider2', 'initial') | float ) - 0.0 }}"
#       - service: input_number.set_value
#         data_template:
#           entity_id: input_number.slider3
#           value: "{{ (state_attr('input_number.slider3', 'initial') | float ) - 0.25 }}"
#       - service: input_number.set_value
#         data_template:
#           entity_id: input_number.slider4
#           value: "{{ (state_attr('input_number.slider4', 'initial') | float ) - 0.25 }}"
#       - service: input_number.set_value
#         data_template:
#           entity_id: input_number.slider5
#           value: "{{ (state_attr('input_number.slider5', 'initial') | float ) - 0.25 }}"
#       - service: input_number.set_value
#         data_template:
#           entity_id: input_number.slider6
#           value: "{{ (state_attr('input_number.slider6', 'initial') | float ) - 0.5 }}"
#       - service: input_number.set_value
#         data_template:
#           entity_id: input_number.slider7
#           value: "{{ (state_attr('input_number.slider7', 'initial') | float ) - 0.5 }}"
#       - service: input_number.set_value
#         data_template:
#           entity_id: input_number.slider8
#           value: "{{ (state_attr('input_number.slider8', 'initial') | float ) - 0.75 }}"
#       - service: input_number.set_value
#         data_template:
#           entity_id: input_number.slider9
#           value: "{{ (state_attr('input_number.slider9', 'initial') | float ) - 0.75 }}"
#       - service: input_number.set_value
#         data_template:
#           entity_id: input_number.slider10
#           value: "{{ (state_attr('input_number.slider10', 'initial') | float ) - 1.0 }}"
#       - service: input_number.set_value
#         data_template:
#           entity_id: input_number.slider11
#           value: "{{ (state_attr('input_number.slider11', 'initial') | float ) - 1.0 }}"

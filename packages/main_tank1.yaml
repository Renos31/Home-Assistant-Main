homeassistant:
  customize:
    package.node_anchors:
      customize: &customize
        package: 'main_tank'
    switch.wemo_fish_tan_pumps:
      friendly_name: Filter's
    switch.outlet_one:
      friendly_name: Wave Pump Left
    switch.outlet_two:
      friendly_name: Wave Pump Right
    script.feeding_time_on:
      friendly_name: Feeding Time On
    script.feeding_time_off:
      friendly_name: Feeding Time Off
    automation.turn_feeding_off:
      friendly_name: Auto Pumps On

group:
  main_tank_power:
    control: hidden
    name: Main Tank Power
    entities:
      - switch.outlet_one
      - switch.outlet_two
      - switch.wemo_fish_tan_pumps

  main_tank_automations:
    control: hidden
    name: Main Tank Automations
    entities:
      - script.feeding_time_on
      - script.feeding_time_off
      - switch.pump_left_control
      - switch.pump_right_control
      - automation.turn_feeding_off
      - input_boolean.boolean_feeding_time_on
      - automation.pumps_on
      - automation.pumps_routine_start
      - input_boolean.pump_left
      - input_boolean.pump_right

input_boolean:
  boolean_feeding_time_on:
    initial: off
  pump_left:
    initial: off
  pump_right:
    initial: off


switch:
  - platform: command_line
    switches:
      outlet_one:
        command_on: !secret netbooter_outlet1_on
        command_off: !secret netbooter_outlet1_off
  - platform: command_line
    switches:
      outlet_two:
        command_on: !secret netbooter_outlet2_on
        command_off: !secret netbooter_outlet2_off
  - platform: template
    switches:
      pump_right_control:
        value_template: "{{ is_state('switch.outlet_two', 'on') }}"
        turn_on:
          - service: script.turn_on
            data:
              entity_id: script.pump_right_on
        turn_off:
          - service: script.turn_on
            data:
              entity_id: script.pump_right_off

  - platform: template
    switches:
      pump_left_control:
        value_template: "{{ is_state('switch.outlet_one', 'on') }}"
        turn_on:
          service: script.turn_on
          data:
            entity_id: script.pump_left_on
        turn_off:
          service: script.turn_on
          data:
            entity_id: script.pump_left_off

  - platform: template
    switches:
      feeding_time:
        value_template: "{{ is_state('switch.wemo_fish_tan_pumps', 'on') }}"
        turn_on:
          - service: script.turn_on
            data:
              entity_id: script.feeding_time_on
        turn_off:
          - service: script.turn_on
            data:
              entity_id: script.feeding_time_off

script:
  feeding_time_on:
    sequence:
      - delay: '00:00:01'
      - service: switch.turn_off
        entity_id: switch.outlet_one
      - service: switch.turn_off
        entity_id: switch.outlet_two
      - service: switch.turn_off
        entity_id: switch.wemo_fish_tan_pumps
      - service: input_boolean.turn_on
        entity_id: input_boolean.boolean_feeding_time_on
      - service: tts.google_say
        data:
          entity_id: media_player.ha_speaker
          message: 'Feeding Time is Starting disabling pumps and filters'

  feeding_time_off:
    sequence:
      - delay: '00:00:01'
      - service: switch.turn_on
        entity_id: switch.outlet_one
      - service: switch.turn_on
        entity_id: switch.wemo_fish_tan_pumps
      - service: input_boolean.turn_off
        entity_id: input_boolean.boolean_feeding_time_on
      - service: script.turn_on
        entity_id: script.pump_cycle_one
  # Pumps will only turn on if it's not feeding time, and the pump is explicity enabled
  pump_left_on:
    sequence:
      - condition: state
        entity_id: input_boolean.boolean_feeding_time_on
        state: 'off'
      - condition: state
        entity_id: input_boolean.pump_left
        state: 'on'
      - service: switch.turn_on
        entity_id: switch.outlet_one

  pump_left_off:
    sequence:
      - service: switch.turn_off
        entity_id: switch.outlet_one

  pump_right_on:
    sequence:
      - condition: state
        entity_id: input_boolean.boolean_feeding_time_on
        state: 'off'
      - condition: state
        entity_id: input_boolean.pump_right
        state: 'on'
      - service: switch.turn_on
        entity_id: switch.outlet_two

  pump_right_off:
    sequence:
      - service: switch.turn_off
        entity_id: switch.outlet_two

  # Step through the left pump, right pump, both pumps
  pump_cycle_one:
    sequence:
      - service: input_boolean.turn_on
        entity_id: input_boolean.pump_left
      - service: input_boolean.turn_off
        entity_id: input_boolean.pump_right
      - delay: '00:30:00'
      - service: script.turn_on
        entity_id: script.pump_cycle_two

  pump_cycle_two:
    sequence:
      - service: input_boolean.turn_off
        entity_id: input_boolean.pump_left
      - service: input_boolean.turn_on
        entity_id: input_boolean.pump_right
      - delay: '00:30:00'
      - service: script.turn_on
        entity_id: script.pump_cycle_three

  pump_cycle_three:
    sequence:
      - service: input_boolean.turn_on
        entity_id: input_boolean.pump_left
      - service: input_boolean.turn_on
        entity_id: input_boolean.pump_right
      - delay: '00:30:00'
      - service: script.turn_on
        entity_id: script.pump_cycle_one



automation:
  # Starts the cycle of the pumps
  - alias: 'pumps_on'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: input_boolean.boolean_early_morning
        to: 'on'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.pump_left, input_boolean.pump_right
      - service: switch.turn_on
        entity_id: switch.pump_right_control, switch.pump_left_control

  - alias: 'pumps_routine_start'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: input_boolean.boolean_home
        to: 'on'
    action:
      - service: script.turn_on
        entity_id: script.pump_cycle_one
      - service: switch.turn_off
        entity_id: switch.outlet_two

  - alias: 'pump_left_on'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: input_boolean.pump_left
        to: 'on'
    action:
      - service: switch.turn_on
        entity_id: switch.pump_left_control

  - alias: 'pump_left_off'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: input_boolean.pump_left
        to: 'off'
    action:
      - service: switch.turn_off
        entity_id: switch.pump_left_control

  - alias: 'pump_right_on'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: input_boolean.pump_right
        to: 'on'
    action:
      - service: switch.turn_on
        entity_id: switch.pump_right_control

  - alias: 'pump_right_off'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: input_boolean.pump_right
        to: 'off'
    action:
      - service: switch.turn_off
        entity_id: switch.pump_right_control

  - alias: 'pumps_off'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: input_boolean.boolean_sleep
        to: 'on'
    action:
      - service: switch.turn_off
        entity_id: switch.pump_left_control, switch.pump_right_control
      - service: input_boolean.turn_off
        entity_id: input_boolean.pump_right, input_boolean.pump_left

  - alias: 'turn_feeding_off_auto'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: input_boolean.boolean_feeding_time_on
        to: 'on'
    action:
      - delay: '00:10:00'
      - service: script.turn_on
        entity_id: script.feeding_time_off
      - service: tts.google_say
        data:
          entity_id: media_player.ha_speaker
          message: 'Feeding Time is Over reenabling pumps and filters'

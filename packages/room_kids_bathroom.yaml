homeassistant:
  customize:
    package.node_anchors:
      customize: &customize
        package: 'Kids Bathroom Room'
    sensor.kids_bathroom_dimmer_battery:
      icon: mdi:battery
      friendly_name: Kids Bathroom Dimmer
    sensor.kids_bathroom_dimmer_last_update:
      icon: mdi:clock
    sensor.kids_bathroom_dimmer_state:
      icon: mdi:remote
    sensor.kids_motion_sensor_batt:
      icon: mdi:battery
      unit_of_measurement: '%'
    sensor.humidity_kids_bathroom:
      friendly_name: Kids Bathroom Humidity
      haaska_hidden: true
    sensor.temperature_kids_bathroom:
      friendly_name: Kids Bathroom Temperature
      haaska_hidden: true
    binary_sensor.motion_sensor_kids_bathroom:
      haaska_hidden: true
    sensor.kids_humidity_sensor_batt:
      haaska_hidden: true
      friendly_name: Kids Bathroom Humidity Sensor
      unit_of_measurement: '%'
      icon: mdi:battery
    sensor.illumination_kids_bathroom:
      friendly_name: Kids Bathroom Lux
      haaska_hidden: true
      icon: mdi:theme-light-dark
    automation.motion_kids_bathroom_motion_on:
      friendly_name: Kids Bathroom Motion On
      haaska_hidden: true
      hidden: false
      persistence: true
    automation.motion_kids_bathroom_motion_off:
      friendly_name: Kids Bathroom Motion Off
      haaska_hidden: true
      hidden: false
      persistence: true

    automation.kids_bath_light_left_on:
      haaska_hidden: true
      hidden: false
      persistence: true
    automation.kids_humidity_fan_on:
      haaska_hidden: true
    automation.kids_humidity_fan_off:
      haaska_hidden: true


    light.kids_bathroom:
      persistence: false
    light.kids_bathroom_vanity:
      persistence: false
    switch.wemo_kids_bath_fan:
      friendly_name: Kids Bath Humidity Fan
      icon: mdi:fan

group:
  kids_bath_card:
     control: hidden
     name: Kids Bath
     entities:
      - light.kids_bathroom
      - light.kids_bathroom_vanity
      - binary_sensor.door_window_sensor_kids_bathroom_door
      - switch.wemo_kids_bath_fan
      - switch.kids_bathroom_scent
      - sensor.temperature_kids_bathroom
      - sensor.pressure_kids_bathroom
      - sensor.humidity_kids_bathroom
      - binary_sensor.motion_sensor_kids_bathroom
      - sensor.illumination_kids_bathroom
      - sensor.kids_motion_sensor_batt
      - sensor.kids_humidity_sensor_batt
      - sensor.kids_bathroom_dimmer_state
      - sensor.kids_bathroom_dimmer_last_update
      - sensor.kids_bathroom_dimmer_battery
      - script.kids_shower_time_on
      - script.kids_shower_time_off
      - switch.kids_shower_time
      - automation.kids_bath_light_left_on
      - automation.kids_bath_shower_time_off
      - automation.kids_bath_shower_time_on
      - automation.motion_kids_bathroom_motion_on
      - automation.motion_kids_bathroom_motion_off


sensor:
      ######## Kids Bathroom
  - platform: rest
    resource: !secret dimmer_rest_27
    value_template: '{{ value_json.config.battery }}'
    unit_of_measurement: '%'
    scan_interval: 1800
    name: 'kids_bathroom_dimmer_battery'
  - platform: rest
    resource: !secret dimmer_rest_27
    value_template: '{{ value_json.state.buttonevent }}'
    scan_interval: 1
    name: 'Kids Bathroom Dimmer State'
  - platform: template
    sensors:
      kids_bathroom_dimmer_state:
        friendly_name: 'Kids Bath Dimmer Last Button Push'
        value_template: >-
                      {% if states('sensor.kids_bathroom_dimmer_state_2')[0] == "1" %}
                        On
                      {% elif states('sensor.kids_bathroom_dimmer_state_2')[0] == "4" %}
                        Off
                      {% else %}
                        None
                      {% endif %}
  - platform: rest
    resource: !secret dimmer_rest_27
    value_template: '{{ value_json.state.lastupdated }}'
    scan_interval: 10
    name: 'Kids Bathroom Dimmer Last Update'
  - platform: template
    sensors:
      kids_bathroom_dimmer_last_update:
        friendly_name: 'Kids Bathroom Last Used'
        value_template: >-
          {{ as_timestamp(strptime(states('sensor.kids_bathroom_dimmer_last_update_2')[:19], '%Y-%m-%dT%X'))|timestamp_custom('%a, %B %d') }}

  - platform: template
    sensors:
      kids_motion_sensor_batt:
        friendly_name: 'Kids Bathroom Motion Sensor'
        value_template: "{{ state_attr('binary_sensor.motion_sensor_kids_bathroom', 'battery_level') }}"

  - platform: template
    sensors:
      kids_humidity_sensor_batt:
        friendly_name: 'Kids Bathroom Humidity Sensor Battery Level'
        value_template: "{{ state_attr('sensor.humidity_kids_bathroom', 'battery_level') }}"

automation:
  - alias: Motion Kids Bathroom Motion On
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: binary_sensor.motion_sensor_kids_bathroom
        to: 'on'
    condition:
      condition: and
      conditions:
      - condition: state
        entity_id: input_boolean.boolean_kids_shower_time
        state: 'off'
    action:
      - service: light.turn_on
        data_template:
          entity_id: light.kids_bathroom
          color_temp: >-
             {% if is_state("input_boolean.boolean_evening_time", "on") %}
             {{ states('input_number.evening_mode_color_temp_value') | int }}
             {% elif is_state("input_boolean.boolean_movie_time", "on") %}
             {{ states('input_number.movie_mode_color_temp_value') | int }}
             {% elif is_state("input_boolean.boolean_sleep", "on") %}
             {{ states('input_number.sleep_mode_color_temp_value') | int }}
             {% elif is_state("input_boolean.boolean_early_morning", "on") %}
             {{ states('input_number.earlymorning_mode_color_temp_value') | int }}
             {% elif is_state("input_boolean.boolean_home", "on") %}
             {{ states('input_number.home_mode_color_temp_value') | int }}
              {% elif is_state("input_boolean.boolean_nap_time", "on") %}
              {{ states('input_number.nap_mode_color_temp_value') | int }}
             {% else %}
               180
             {% endif %}
          brightness_pct: >-
              {% if is_state("input_boolean.boolean_evening_time", "on") %}
              {{ states('input_number.evening_mode_brightness_value') | int }}
              {% elif is_state("input_boolean.boolean_movie_time", "on") %}
              {{ states('input_number.movie_mode_brightness_value') | int }}
              {% elif is_state("input_boolean.boolean_sleep", "on") %}
              {{ states('input_number.sleep_mode_brightness_value') | int }}
              {% elif is_state("input_boolean.boolean_early_morning", "on") %}
              {{ states('input_number.earlymorning_mode_brightness_value') | int }}
              {% elif is_state("input_boolean.boolean_home", "on") %}
              {{ states('input_number.home_mode_brightness_value') | int }}
              {% elif is_state("input_boolean.boolean_nap_time", "on") %}
              {{ states('input_number.nap_mode_brightness_value') | int }}
              {% else %}
                100
              {% endif %}


  - alias: Motion Kids Bathroom Motion On
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: binary_sensor.motion_sensor_kids_bathroom
        to: 'off'
        for:
          minutes: 3
    condition:
      condition: and
      conditions:
      - condition: state
        entity_id: input_boolean.boolean_kids_shower_time
        state: 'off'
    action:
      - service: light.turn_off
        data_template:
          entity_id: light.kids_bathroom
          transition: >-
              {% if is_state("input_boolean.boolean_evening_time", "on") %}
              {{ states('input_number.evening_mode_transition_value') | int }}
              {% elif is_state("input_boolean.boolean_movie_time", "on") %}
              {{ states('input_number.movie_mode_transition_value') | int }}
              {% elif is_state("input_boolean.boolean_sleep", "on") %}
              {{ states('input_number.sleep_mode_transition_value') | int }}
              {% elif is_state("input_boolean.boolean_early_morning", "on") %}
              {{ states('input_number.earlymorning_mode_transition_value') | int }}
              {% elif is_state("input_boolean.boolean_home", "on") %}
              {{ states('input_number.home_mode_transition_value') | int }}
              {% elif is_state("input_boolean.boolean_nap_time", "on") %}
              {{ states('input_number.nap_mode_transition_value') | int }}
              {% else %}
                15
              {% endif %}

  - alias: Kids Bath light left on
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: light.kids_bathroom_vanity
        to: 'on'
        for: '01:00:00'
    action:
      - service: light.turn_off
        entity_id:
          - light.kids_bathroom_vanity
          - light.kids_bathroom

###############################################################################
###  vent fan if humidity is over 60 control                            #######
###############################################################################
  - alias: Kids Humidity Fan On
    initial_state: 'on'
    trigger:
      - platform: template
        value_template: '{{ states.sensor.humidity_kids_bathroom.state > states.input_number.target_humidity_kids_bathroom.state }}'
    action:
      - service: switch.turn_on
        entity_id: switch.wemo_kids_bath_fan
  - alias: Kids Humidity Fan Off
    initial_state: 'on'
    trigger:
      - platform: template
        value_template: '{{ states.sensor.humidity_kids_bathroom.state < states.input_number.target_humidity_kids_bathroom.state }}'
    action:
      - service: switch.turn_off
        entity_id: switch.wemo_kids_bath_fan
